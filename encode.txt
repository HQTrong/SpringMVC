
    var HIUL = 'style="font-weight: bold; text-decoration: underline;"';
    var PCRI= 'style="font-weight: bold; color: #777;color: white; background-color: black;"';
function processUI(keywords, input) {
    var inputText = input;
    inputText = inputText.replace(/DSPATR\([^)]*\)/g, "");
    inputText = inputText.replace(/EDTWRD\([^)]*\)/g, "");
    var data = "";
    var commentScreen = UIUtil.getCommentForScreen(inputText);
    inputText = UIUtil.processData(inputText);
    var keyStart = 'A*****************************************************************';
    while (inputText.indexOf(keyStart) > -1)
    {
        var tmp =UIUtil.getScreen(inputText);
        var arr = tmp.split('\n');
        var idTable = UIUtil.getIdTable(arr);
        var listData = UIUtil.getDataForScreen(arr);
        var result = UIUtil.modifyHTML(listData, idTable);
        data += result;
        inputText = inputText.replace(tmp,'');
    }
    return data;
}
var UIUtil = {
    commentOutLine: function(tmpRecord, extendKeyword) {

    },
    getCommentForScreen: function(data) {
        var result = '';
        var key = 'A*****************************************************************';
        var startIndex = data.indexOf(key);
        var endIndex = data.indexOf('A  ');
        result = data.substring(startIndex, endIndex);
        return result;

    },
    processData: function(data) {
        var key = 'A*****************************************************************\n     A*';
        var comment = this.getCommentForScreen(data);
        data = data.replace(comment, '');
        var result = '';
        var endIndex = data.indexOf(key) +key.length;
        result = data.substring(0, endIndex);
        data = data.replace(result,'     A*');

        while (data.indexOf(key) > -1)
        {
            data = data.replace(key,'ENDSCREEN\n     A*');
        }
        return data;
    },
    getScreen: function (data)
    {
        var keyStart = 'A*****************************************************************';
        var startIndex = data.indexOf(keyStart);
        var keyEnd = 'ENDSCREEN\n     A*';
        var endIndex = data.indexOf(keyEnd) + keyEnd.length;
        if(endIndex < startIndex)
        {
            keyEnd = '     A*';
            endIndex = data.lastIndexOf(keyEnd) + keyEnd.length;
        }
        return data.substring(startIndex,endIndex);
    },
    getIdTable: function (arr) {
        var id = "";
        var key = 'A          R';
        arr.forEach(item => {
            if (item.includes(key)) {
                var index = item.indexOf(key) + key.length;
                id = item.substring(index, 30).trim();
            }
        });
        return id;
    },
    getDataForScreen: function (arr)
    {
        var listData=[];
        var i =0;
        for(i=0; i< arr.length; i++)
        {
            var obj = null;
            var item = arr[i].replace('ENDSCREEN', '');
            if (!item.includes('A*') && !this.checkWordIgnore(item)) {
                obj = {
                    name: this.getVariable(item),
                    dataType: this.getDataType(item),
                    output: this.getTypeOutput(item),
                    rowIndex: this.getRowIndex(item),
                    columnIndex: this.getColumnIndex(item),
                    data: this.getData(item),
                    length: this.getMaxLength(item),
                    id: this.getID(item),
                    condition: this.getCondition(item)
                };
                if((obj != null && item.lastIndexOf('-') > -1)
                    || (obj != null && item.lastIndexOf('+') > -1))
                {
                    for(;;)
                    {
                        i = i+1;
                        item = arr[i];
                        if(item.includes('-') || item.includes('+') || item.lastIndexOf('\'') > -1)
                        {
                            obj.data += this.getData(item);
                        }
                        if(item.lastIndexOf('\'')> -1)
                        {
                            break;
                        }
                    }
                }
                //check condition
                if(obj != null)
                {
                    for ( var j = i+1 ; ; j++) {
                        item = arr[j];
                        var condition = this.getCondition(item);
                        if(item.indexOf('     A*') > -1 || condition === '')
                        {
                            break;
                        }
                        if(condition !== '')
                        {
                            if( obj.condition!=='')
                            {
                                obj.condition += ',' + condition;
                            }
                            else
                            {
                                obj.condition += condition;
                            }

                        }

                    }
                }
                if(isNaN(obj.rowIndex) || isNaN(obj.columnIndex))
                {
                    continue;
                }
                listData.push(obj);
            }
        }
        return listData;
    },
    getVariable: function (tmp)
    {
        return this.replaceUISpecialChar(tmp.substring(18,25)).trim();
    },
    getDataType: function (tmp)
    {
        return this.replaceUISpecialChar(tmp.substring(32,36)).trim();
    },
    getTypeOutput: function (tmp)
    {
        return this.replaceUISpecialChar(tmp.substring(36,39)).trim();
    },
    getRowIndex: function (tmp)
    {
        return parseInt(tmp.substring(39,42).trim());
    },
    getColumnIndex: function (tmp)
    {
        return parseInt(tmp.substring(42,44).trim());
    },
    getData: function (tmp)
    {
        var data = this.replaceUISpecialChar(tmp.substring(44)).trim();
        if (data.indexOf('DATE') > -1 || data.indexOf('TIME')> -1
            || data.indexOf('COLOR') >-1 || data.indexOf('EDTCDE') > -1)
        {
            data = '';
        }
        if(data.indexOf('\'')> -1)
        {
            while (data.indexOf('TEXT(\'') > -1)
            {
                data = data.replace('TEXT(\'','');
            }
            while (data.indexOf('\')') > -1)
            {
                data = data.replace('\')','');
            }
            while (data.indexOf('\'') > -1)
            {
                data = data.replace('\'','');
            }
            while (data.indexOf('+') > -1)
            {
                data = data.replace('+',' ');
            }
        }
        
        return data;
    },
    getID: function (tmp)
    {
        var data = this.replaceUISpecialChar(tmp.substring(44)).trim();
        var id='';
        if(data.indexOf('DATE') > -1 || data.indexOf('TIME')> -1)
        {
            id = this.replaceUISpecialChar(tmp.substring(44,49)).trim();
        }
        return id;
    },
    getMaxLength: function (tmp)
    {
        return this.replaceUISpecialChar(tmp.substring(32,34)).trim();
    },
    getCondition: function (tmp)
    {
        return this.replaceUISpecialChar(tmp.substring(7,14)).trim();
    },
    replaceUISpecialChar: function(methodName) {
    while (methodName.indexOf("¥") > -1) {
        methodName = methodName.replace("¥", "Y1");
    }
    while (methodName.indexOf("@") > -1) {
        methodName = methodName.replace("@", "A1");
    }
    while (methodName.indexOf("#") > -1) {
        methodName = methodName.replace("#", "S1");
    }
    while (methodName.indexOf("\\") > -1) {
        methodName = methodName.replace("\\", "_");
    }
    return methodName;
    },
    checkWordIgnore: function(currentRecord) {
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("PRINT") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.trim() === "A")
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("OVERLAY") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("KEEP") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("PROTECT") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("BLINK") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("CA") > -1)
            return true;
        if (currentRecord.indexOf("AO") > -1 && currentRecord.indexOf("CA") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("ALARM") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.indexOf("CF") > -1)
            return true;
        if (currentRecord.indexOf("A") > -1 && currentRecord.trim() === "A")
            return true;
        if (currentRecord.length > 6) {
            var tmp = currentRecord.substring(6).trim();
            if (tmp.length == 1)
                return true;
        }
        return false;
    },
    modifyHTML: function (list, idTable)
    {
        var result='';
        var table = '<table id="'+ idTable +'" cellpadding="3" cellspacing="2" width="100%" height=30px>\n';
        result = table;
        var listData = list.sort((a, b) => {
            if (a.rowIndex === b.rowIndex) {
                return a.columnIndex - b.columnIndex;
            }
            return a.rowIndex - b.rowIndex;
        });

        var tmp = 0;
        listData.forEach(item=>{
            if(tmp === 0 )
            {
                result += '<tr row_'+item.rowIndex+'>\n';
                result = this.genTdTag(result,item);
                result = this.replaceType(result,item);
                tmp = item.rowIndex;
            }
            else if(tmp === item.rowIndex)
            {
                result = this.genTdTag(result,item);
                result = this.replaceType(result,item);
                tmp = item.rowIndex;
            }else
            {
                result += '</tr>\n<tr row_'+item.rowIndex+'>\n';
                result = this.genTdTag(result,item);
                result = this.replaceType(result,item);
                tmp = item.rowIndex;
            }
        });

        return result +'</tr>\n</table>\n';
    },
    replaceType: function (result,item)
    {
        if(item.output.includes('B') || item.output.includes('O'))
        {
            result = result.replace('{type}','text');
        }
        else
        {
            result = result.replace('{type}','');
        }
        return result;
    },
    genTdTag: function (result, item)
    {
        var tdButton =  '<td><button class="main_buttonM_10" onclick="window.location.href =\'#\';">' +item.data+'</button>';
        var tdText =  '<td>\n<input type="{type}" class="input_len_8 input_padding" name="' + item.name + '" maxlength="' + item.length + '">\n<label {condition} >'
            +item.data+'</label>\n';
        var tdLabelTag = '<td><label {condition} >'+item.data+'</label>\n';
        var tdTag = '<td>\n<input {condition} type="{type}" class="input_len_8 input_padding" name="' + item.name + '" maxlength="' + item.length + '">'
        if(item.data.includes('F'))
        {
            result += tdButton;
        }else if(item.output.includes('B') || item.output.includes('O'))
        {
            if(item.data.length > 1)
            {
                result += tdText;
            }
            else
            {
                result += tdTag;
            }
        }else
        {
            if(item.id.length > 1)
            {
                tdLabelTag = '<td><label {condition} id="'+item.id+'">'+item.data+'</label>\n';
            }
            result += tdLabelTag;
        }
        result = this.checkCondition(result,item);
        return result;
    },
    checkCondition: function (result, item)
    {
        var key= 1;
        var replacementCondition;
        if(item.condition.length > 1)
        {
            var labelTag ='<label {condition} >'+item.data+'</label>\n';
            var arr = item.condition.toString().split(',');
            arr.forEach(e =>{
                if(key < arr.length)
                {
                    result += labelTag;
                }
                if(e.indexOf('N') > -1)
                {
                    if(e.length > 3)
                    {
                        var replace ='';
                        var parts = e.substring(1).split("N");
                        parts.forEach(el =>{
                            if(replace === '')
                            {
                                replace +='${IN['+el+'] != 1';
                            }
                            else {
                                replace += ' && ' + 'IN[' + el + '] != 1';
                            }
                        });
                        replace = replace +'}';
                        replacementCondition = 'th:if="'+replace+'"' + HIUL;
                    }
                    else
                    {
                        replacementCondition = 'th:if="${IN['+e.substring(1)+'] != 1}"' + HIUL;
                    }
                }
                else
                {
                    replacementCondition = 'th:if="${IN['+e+'] == 1}"' + PCRI;
                }
                key ++;
                result = result.replace(' {condition} ', ' '+replacementCondition);

            });
        }
        else
        {
            result = result.replaceAll(' {condition} ',' ');
        }
        return result +'</td>\n';
    }

}
